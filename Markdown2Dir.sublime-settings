{
    // ===== General Guidelines =====
    // IMPORTANT: Configure these settings before starting your project.
    // The plugin generates markdown from directories and vice versa using the rules below.
    // Save the markdown file in the same directory as the project files to be processed.

    // Commands:
    // - "Build Directory 2 Markdown": Generate markdown from existing files.
    // - "Build Markdown 2 Directory": Generate files from a markdown file.

    // ===== Settings =====

    "file_naming_convention": "on_fence",
    // Options: "on_fence", "before_fence", "after_fence"
    // Defines how filenames are represented in markdown:
    // - "before_fence":
    //       path/to/file.cpp
    //       ```cpp
    //       // Code content
    //       ```
    // - "on_fence":
    //       ```path/to/file.cpp
    //       // Code content
    //       ```
    // - "after_fence":
    //       ```
    //       // path/to/file.cpp
    //       // Code content
    //       ```

    "blocks_ignored": ["readme", "properties", "lessthan_3", "nameless", "without_ext"],
    // Specifies which code blocks to ignore during processing:
    // - "conflicts": Ignores blocks w/ existing files and files w/ matching blocks.
    // - "non-conflicts": Ignores blocks w/o matching files and files w/o matching blocks.
    // - "readme": Ignore blocks containing "readme" or "README".
    // - "properties": Ignore blocks containing "properties" or "PROPERTIES".
    // - "lessthan_<N>": Ignore blocks smaller than N lines (default: 3).
    // - "nameless": Ignore blocks without filenames.
    // - "without_ext": Ignore files without extensions.
    // - "none": Include all blocks (overrides other settings).
    //   Note: Nameless files will be named using the first available number and default extension.

    "extensions_2_include": [],
    // Specify file extensions to include (overrides "extensions_2_ignore").
    // Example: ["cpp", "py", "txt"]
    // Leave empty to include all extensions.

    "extensions_2_ignore": [],
    // Specify file extensions to exclude (ignored if "extensions_2_include" is set).
    // Example: ["log", "tmp"]
    // Leave empty to include all extensions.

    "directories_2_include": [],
    // List directories to include during processing (overrides "directories_2_ignore").
    // Example: ["src", "include"]
    // Leave empty to include all directories.

    "directories_2_ignore": [],
    // List directories to exclude during processing (used only if "directories_2_include" is empty).
    // Example: ["build", "temp"]

    "include_nested_directories": true,
    // Options: true, false
    // If true, nested directories under the specified parent are included or excluded based on rules.

    "files_2_include": [],
    // Specify exact filenames (case-sensitive) to include during processing.
    // Example: ["main.cpp", "config.json"]
    // Overrides all other file-related settings.

    "files_2_ignore": [],
    // Specify exact filenames (case-sensitive) to exclude during processing.
    // Used only if "files_2_include" is empty.
    // Example: ["debug.log", "README.md"]

    "partial_names_2_include": [],
    // Specify keywords to include files whose names contain these terms (case-insensitive).
    // Example: ["config", "settings"]

    "partial_names_2_ignore": [],
    // Specify keywords to exclude files whose names contain these terms (case-insensitive).
    // Example: ["debug", "temp"]

    "attempt_injection": false,
    // Options: true, false
    // EXPERIMENTAL: Determines how to handle code blocks for existing files.
    // - true: Injects new code blocks into existing files, commenting out replaced sections.
    // - false: Handles conflicts using the "handle_file_conflicts" setting.

    "handle_file_conflicts": "prepend_and_comment"
    // Options: "prepend_and_comment", "append_n_to_filename", "append_oN_to_ext", "move_to_backup_dir"
    // Specifies how to handle file conflicts during processing:
    // - "prepend_and_comment": Adds new code at the start of the file and comments out existing content.
    // - "append_n_to_filename": Appends a number (e.g., "file_1.cpp") to create a new file.
    // - "append_oN_to_ext": Adds ".oN" to the extension (e.g., "file.o1.cpp").
    // - "move_to_backup_dir": Moves conflicting files to a "backup" directory and renames if needed.

    // ===== Notes =====
    // Use experimental features like "attempt_injection" cautiously, as they may produce unexpected results.
    // Always back up your data before processing.
}